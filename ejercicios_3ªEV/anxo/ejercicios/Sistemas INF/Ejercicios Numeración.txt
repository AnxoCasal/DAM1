

	Ejercicios
	
	1º

	5.5 = 101.1
	23.8 = 10111.110011
	48 = 110000
	128.25 =  1000000.01
	430 = 110101110

	2º

	1010.01 = 10.25
	111000 = 56
	1000010 = 66
	110011 = 51
	100.11 = 4.75

	3º

	78,142 = no existe la cifra 8
	A9 = no existe la cifra A
	35294 = no existe la cifra 9
	8 = no existe la cifra 8
	

	4º 

	5 = 101 = 5
	23 = 10011 = 19
	50 = 101000 = 40
	111 = 1001001 = 73
	1026 = 1000010110 = 534

	5º

	D = 1101 =13
	FF = 1111 1111 = 255
	13 = 0001 0011 = 19
	9B = 1001 1011 = 155
	1E3 = 0001 1110 0011 = 483

	6º

	561 = 000101110001 = 171 
	132 = 000001011010 = 5A
	10 =  000000001000 = 8

	7ª

	21	= 10001	= 11
	371	= 1111 1001 = f9
	151	= 1 0101 0001 = 151
	3	= 11 = 3

	8º

	1024 = 2000 = 10000000000 = 400
	200 = 310 = 11001000 = c8
	123 = 173 = 1111011 = 7b


	











	12	1100
	-7	0111
	00101 	
	
	
	25	11001
	6	00110
		10011


	A9 = 1010 1001
	1F = 0001 1111 (NOT) 1110 0000
	66 = 110 110

	10101001	10100000
	11100000	00110110
	
	10100000	10110110 = B6




	10 = 00001010
	5 =  00000101
	     00001111 = 0F





	34 = 0100010
	99 = 1100011
	    10000101     


	50 = 110010
	25 = 011001
	     011001     


	20 = 10100 
	5  = 00101
	     -----
	     10100
	    00000
	   10100
	   1100100


	64 = 1000000
	4  =     100
		
	1000000 100
	 000    10000
	  000
	   000
	    000
	     00 

	
	
	€ = U+20AC =UTF16 0x20 0xAC =UTF8 0xe2 0x82 0xac


	pasar unicode a binario

	20AC = 0010000010101100
	UTF 16 = 
	xxxxxxxx = 00100000
	xxxxxxxx = 10101100

	byte a la derecha mas significativo

	UTF8 
	1110xxxx = 11100010 = e2
	10xxxxxx = 10000010 = 82
	10xxxxxx = 10101100 = ac

	relleno las x con los bits



	U = u+0170 =UTF16 0x01 0x70 =UTF8 0xc5 0xb0

	0170 = 0000000101110000

	00000001 = 01
	01110000 = 70
	
	11000101 = c5
	10110000 = b0




	Ejercicos memoria


	1º 

	128 kBytes * 1000 = 128000 bytes * 8 = 1024000 bits = 
	16 MBytes * 1000000 = 16000000 bytes * 8 = 134000000 bits / 1000 = 134000 kbits
	64 GBytes * 1000000000 =


	128 kbytes = 2^7 * 2^10 bytes = 2^17 bytes * 2^3 = 2^20 bits
	16 MBytes = 2^4 * 2^20 bytes = 2^24 *2^3 = 2^27 bits / 2^10 = 2^17
	64 GBytes = 2^6 * 2^30 bytes = 2^36 bytes * 2^3 = 2^39 bits / 2^10 = 2^29 kbits

	2º

	2KB = 2^11 bytes
	16MB = 2^4 * 2^20 = 2^24 bytes

	2^24 / 2^11 = 2^13 archivos

	3º

	2^3 * 8/8 = 8 * 1 = 8 bytes


	4º

	2^32 * 64/8 = 4.294.967.296 * 8 = 34.359.738.368 bytes = 32.768 MBytes


	5º

	2^16 * 2^16/8 = 64 * 64/8 = 64 * 8 = 512 bytes
	

	6º

	2^24 * 2^32/8 = 16.777.216 * 4.294.967.296/8 = 4.294.967.296/8























	

